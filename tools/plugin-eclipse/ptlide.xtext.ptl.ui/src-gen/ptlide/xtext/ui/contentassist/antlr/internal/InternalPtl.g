/*
* generated by Xtext
*/
grammar InternalPtl;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package ptlide.xtext.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package ptlide.xtext.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import ptlide.xtext.services.PtlGrammarAccess;

}

@parser::members {
 
 	private PtlGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(PtlGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleProtocol
entryRuleProtocol 
:
{ before(grammarAccess.getProtocolRule()); }
	 ruleProtocol
{ after(grammarAccess.getProtocolRule()); } 
	 EOF 
;

// Rule Protocol
ruleProtocol
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getProtocolAccess().getGroup()); }
(rule__Protocol__Group__0)
{ after(grammarAccess.getProtocolAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitions
entryRuleTransitions 
:
{ before(grammarAccess.getTransitionsRule()); }
	 ruleTransitions
{ after(grammarAccess.getTransitionsRule()); } 
	 EOF 
;

// Rule Transitions
ruleTransitions
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionsAccess().getGroup()); }
(rule__Transitions__Group__0)
{ after(grammarAccess.getTransitionsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransition
entryRuleTransition 
:
{ before(grammarAccess.getTransitionRule()); }
	 ruleTransition
{ after(grammarAccess.getTransitionRule()); } 
	 EOF 
;

// Rule Transition
ruleTransition
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionAccess().getGroup()); }
(rule__Transition__Group__0)
{ after(grammarAccess.getTransitionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTransitionType
entryRuleTransitionType 
:
{ before(grammarAccess.getTransitionTypeRule()); }
	 ruleTransitionType
{ after(grammarAccess.getTransitionTypeRule()); } 
	 EOF 
;

// Rule TransitionType
ruleTransitionType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
(rule__TransitionType__Alternatives)
{ after(grammarAccess.getTransitionTypeAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTimeout
entryRuleTimeout 
:
{ before(grammarAccess.getTimeoutRule()); }
	 ruleTimeout
{ after(grammarAccess.getTimeoutRule()); } 
	 EOF 
;

// Rule Timeout
ruleTimeout
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTimeoutAccess().getGroup()); }
(rule__Timeout__Group__0)
{ after(grammarAccess.getTimeoutAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapping
entryRuleMapping 
:
{ before(grammarAccess.getMappingRule()); }
	 ruleMapping
{ after(grammarAccess.getMappingRule()); } 
	 EOF 
;

// Rule Mapping
ruleMapping
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMappingAccess().getGroup()); }
(rule__Mapping__Group__0)
{ after(grammarAccess.getMappingAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleMapFromTo
entryRuleMapFromTo 
:
{ before(grammarAccess.getMapFromToRule()); }
	 ruleMapFromTo
{ after(grammarAccess.getMapFromToRule()); } 
	 EOF 
;

// Rule MapFromTo
ruleMapFromTo
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getMapFromToAccess().getGroup()); }
(rule__MapFromTo__Group__0)
{ after(grammarAccess.getMapFromToAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTrigger
entryRuleTrigger 
:
{ before(grammarAccess.getTriggerRule()); }
	 ruleTrigger
{ after(grammarAccess.getTriggerRule()); } 
	 EOF 
;

// Rule Trigger
ruleTrigger
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTriggerAccess().getGroup()); }
(rule__Trigger__Group__0)
{ after(grammarAccess.getTriggerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRulePattern
entryRulePattern 
:
{ before(grammarAccess.getPatternRule()); }
	 rulePattern
{ after(grammarAccess.getPatternRule()); } 
	 EOF 
;

// Rule Pattern
rulePattern
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getPatternAccess().getGroup()); }
(rule__Pattern__Group__0)
{ after(grammarAccess.getPatternAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContent
entryRuleContent 
:
{ before(grammarAccess.getContentRule()); }
	 ruleContent
{ after(grammarAccess.getContentRule()); } 
	 EOF 
;

// Rule Content
ruleContent
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContentAccess().getGroup()); }
(rule__Content__Group__0)
{ after(grammarAccess.getContentAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleOccurrence
entryRuleOccurrence 
:
{ before(grammarAccess.getOccurrenceRule()); }
	 ruleOccurrence
{ after(grammarAccess.getOccurrenceRule()); } 
	 EOF 
;

// Rule Occurrence
ruleOccurrence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getOccurrenceAccess().getGroup()); }
(rule__Occurrence__Group__0)
{ after(grammarAccess.getOccurrenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDuty
entryRuleDuty 
:
{ before(grammarAccess.getDutyRule()); }
	 ruleDuty
{ after(grammarAccess.getDutyRule()); } 
	 EOF 
;

// Rule Duty
ruleDuty
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDutyAccess().getGroup()); }
(rule__Duty__Group__0)
{ after(grammarAccess.getDutyAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDutyType
entryRuleDutyType 
:
{ before(grammarAccess.getDutyTypeRule()); }
	 ruleDutyType
{ after(grammarAccess.getDutyTypeRule()); } 
	 EOF 
;

// Rule DutyType
ruleDutyType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDutyTypeAccess().getGroup()); }
(rule__DutyType__Group__0)
{ after(grammarAccess.getDutyTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantOccurrence
entryRuleParticipantOccurrence 
:
{ before(grammarAccess.getParticipantOccurrenceRule()); }
	 ruleParticipantOccurrence
{ after(grammarAccess.getParticipantOccurrenceRule()); } 
	 EOF 
;

// Rule ParticipantOccurrence
ruleParticipantOccurrence
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getGroup()); }
(rule__ParticipantOccurrence__Group__0)
{ after(grammarAccess.getParticipantOccurrenceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStates
entryRuleStates 
:
{ before(grammarAccess.getStatesRule()); }
	 ruleStates
{ after(grammarAccess.getStatesRule()); } 
	 EOF 
;

// Rule States
ruleStates
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStatesAccess().getGroup()); }
(rule__States__Group__0)
{ after(grammarAccess.getStatesAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleState
entryRuleState 
:
{ before(grammarAccess.getStateRule()); }
	 ruleState
{ after(grammarAccess.getStateRule()); } 
	 EOF 
;

// Rule State
ruleState
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateAccess().getGroup()); }
(rule__State__Group__0)
{ after(grammarAccess.getStateAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateId
entryRuleStateId 
:
{ before(grammarAccess.getStateIdRule()); }
	 ruleStateId
{ after(grammarAccess.getStateIdRule()); } 
	 EOF 
;

// Rule StateId
ruleStateId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateIdAccess().getNameAssignment()); }
(rule__StateId__NameAssignment)
{ after(grammarAccess.getStateIdAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStateType
entryRuleStateType 
:
{ before(grammarAccess.getStateTypeRule()); }
	 ruleStateType
{ after(grammarAccess.getStateTypeRule()); } 
	 EOF 
;

// Rule StateType
ruleStateType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStateTypeAccess().getGroup()); }
(rule__StateType__Group__0)
{ after(grammarAccess.getStateTypeAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipants
entryRuleParticipants 
:
{ before(grammarAccess.getParticipantsRule()); }
	 ruleParticipants
{ after(grammarAccess.getParticipantsRule()); } 
	 EOF 
;

// Rule Participants
ruleParticipants
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantsAccess().getGroup()); }
(rule__Participants__Group__0)
{ after(grammarAccess.getParticipantsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipant
entryRuleParticipant 
:
{ before(grammarAccess.getParticipantRule()); }
	 ruleParticipant
{ after(grammarAccess.getParticipantRule()); } 
	 EOF 
;

// Rule Participant
ruleParticipant
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantAccess().getGroup()); }
(rule__Participant__Group__0)
{ after(grammarAccess.getParticipantAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantId
entryRuleParticipantId 
:
{ before(grammarAccess.getParticipantIdRule()); }
	 ruleParticipantId
{ after(grammarAccess.getParticipantIdRule()); } 
	 EOF 
;

// Rule ParticipantId
ruleParticipantId
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantIdAccess().getNameAssignment()); }
(rule__ParticipantId__NameAssignment)
{ after(grammarAccess.getParticipantIdAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantDescription
entryRuleParticipantDescription 
:
{ before(grammarAccess.getParticipantDescriptionRule()); }
	 ruleParticipantDescription
{ after(grammarAccess.getParticipantDescriptionRule()); } 
	 EOF 
;

// Rule ParticipantDescription
ruleParticipantDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getGroup()); }
(rule__ParticipantDescription__Group__0)
{ after(grammarAccess.getParticipantDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCardinality
entryRuleParticipantCardinality 
:
{ before(grammarAccess.getParticipantCardinalityRule()); }
	 ruleParticipantCardinality
{ after(grammarAccess.getParticipantCardinalityRule()); } 
	 EOF 
;

// Rule ParticipantCardinality
ruleParticipantCardinality
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getAlternatives()); }
(rule__ParticipantCardinality__Alternatives)
{ after(grammarAccess.getParticipantCardinalityAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCardinalityMinMax
entryRuleParticipantCardinalityMinMax 
:
{ before(grammarAccess.getParticipantCardinalityMinMaxRule()); }
	 ruleParticipantCardinalityMinMax
{ after(grammarAccess.getParticipantCardinalityMinMaxRule()); } 
	 EOF 
;

// Rule ParticipantCardinalityMinMax
ruleParticipantCardinalityMinMax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getGroup()); }
(rule__ParticipantCardinalityMinMax__Group__0)
{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCardinalityMin
entryRuleParticipantCardinalityMin 
:
{ before(grammarAccess.getParticipantCardinalityMinRule()); }
	 ruleParticipantCardinalityMin
{ after(grammarAccess.getParticipantCardinalityMinRule()); } 
	 EOF 
;

// Rule ParticipantCardinalityMin
ruleParticipantCardinalityMin
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantCardinalityMinAccess().getGroup()); }
(rule__ParticipantCardinalityMin__Group__0)
{ after(grammarAccess.getParticipantCardinalityMinAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCardinalityMax
entryRuleParticipantCardinalityMax 
:
{ before(grammarAccess.getParticipantCardinalityMaxRule()); }
	 ruleParticipantCardinalityMax
{ after(grammarAccess.getParticipantCardinalityMaxRule()); } 
	 EOF 
;

// Rule ParticipantCardinalityMax
ruleParticipantCardinalityMax
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getGroup()); }
(rule__ParticipantCardinalityMax__Group__0)
{ after(grammarAccess.getParticipantCardinalityMaxAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleParticipantCardinalityAll
entryRuleParticipantCardinalityAll 
:
{ before(grammarAccess.getParticipantCardinalityAllRule()); }
	 ruleParticipantCardinalityAll
{ after(grammarAccess.getParticipantCardinalityAllRule()); } 
	 EOF 
;

// Rule ParticipantCardinalityAll
ruleParticipantCardinalityAll
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getParticipantCardinalityAllAccess().getNameAssignment()); }
(rule__ParticipantCardinalityAll__NameAssignment)
{ after(grammarAccess.getParticipantCardinalityAllAccess().getNameAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleType
entryRuleType 
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTypeAccess().getTypeAssignment()); }
(rule__Type__TypeAssignment)
{ after(grammarAccess.getTypeAccess().getTypeAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleRole
entryRuleRole 
:
{ before(grammarAccess.getRoleRule()); }
	 ruleRole
{ after(grammarAccess.getRoleRule()); } 
	 EOF 
;

// Rule Role
ruleRole
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getRoleAccess().getRoleAssignment()); }
(rule__Role__RoleAssignment)
{ after(grammarAccess.getRoleAccess().getRoleAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleDescription
entryRuleDescription 
:
{ before(grammarAccess.getDescriptionRule()); }
	 ruleDescription
{ after(grammarAccess.getDescriptionRule()); } 
	 EOF 
;

// Rule Description
ruleDescription
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getDescriptionAccess().getGroup()); }
(rule__Description__Group__0)
{ after(grammarAccess.getDescriptionAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoals
entryRuleGoals 
:
{ before(grammarAccess.getGoalsRule()); }
	 ruleGoals
{ after(grammarAccess.getGoalsRule()); } 
	 EOF 
;

// Rule Goals
ruleGoals
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoalsAccess().getGroup()); }
(rule__Goals__Group__0)
{ after(grammarAccess.getGoalsAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleGoal
entryRuleGoal 
:
{ before(grammarAccess.getGoalRule()); }
	 ruleGoal
{ after(grammarAccess.getGoalRule()); } 
	 EOF 
;

// Rule Goal
ruleGoal
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getGoalAccess().getGroup()); }
(rule__Goal__Group__0)
{ after(grammarAccess.getGoalAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_PROTOCOL
entryRuleTK_PROTOCOL 
:
{ before(grammarAccess.getTK_PROTOCOLRule()); }
	 ruleTK_PROTOCOL
{ after(grammarAccess.getTK_PROTOCOLRule()); } 
	 EOF 
;

// Rule TK_PROTOCOL
ruleTK_PROTOCOL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_PROTOCOLAccess().getProtocolKeyword()); }

	'protocol' 

{ after(grammarAccess.getTK_PROTOCOLAccess().getProtocolKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_DESCRIPTION
entryRuleTK_DESCRIPTION 
:
{ before(grammarAccess.getTK_DESCRIPTIONRule()); }
	 ruleTK_DESCRIPTION
{ after(grammarAccess.getTK_DESCRIPTIONRule()); } 
	 EOF 
;

// Rule TK_DESCRIPTION
ruleTK_DESCRIPTION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_DESCRIPTIONAccess().getDescriptionKeyword()); }

	'description' 

{ after(grammarAccess.getTK_DESCRIPTIONAccess().getDescriptionKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_GOALS
entryRuleTK_GOALS 
:
{ before(grammarAccess.getTK_GOALSRule()); }
	 ruleTK_GOALS
{ after(grammarAccess.getTK_GOALSRule()); } 
	 EOF 
;

// Rule TK_GOALS
ruleTK_GOALS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_GOALSAccess().getGoalsKeyword()); }

	'goals' 

{ after(grammarAccess.getTK_GOALSAccess().getGoalsKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_PARTICIPANTS
entryRuleTK_PARTICIPANTS 
:
{ before(grammarAccess.getTK_PARTICIPANTSRule()); }
	 ruleTK_PARTICIPANTS
{ after(grammarAccess.getTK_PARTICIPANTSRule()); } 
	 EOF 
;

// Rule TK_PARTICIPANTS
ruleTK_PARTICIPANTS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_PARTICIPANTSAccess().getParticipantsKeyword()); }

	'participants' 

{ after(grammarAccess.getTK_PARTICIPANTSAccess().getParticipantsKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_AGENT
entryRuleTK_AGENT 
:
{ before(grammarAccess.getTK_AGENTRule()); }
	 ruleTK_AGENT
{ after(grammarAccess.getTK_AGENTRule()); } 
	 EOF 
;

// Rule TK_AGENT
ruleTK_AGENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_AGENTAccess().getAgentKeyword()); }

	'agent' 

{ after(grammarAccess.getTK_AGENTAccess().getAgentKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_ARTIFACT
entryRuleTK_ARTIFACT 
:
{ before(grammarAccess.getTK_ARTIFACTRule()); }
	 ruleTK_ARTIFACT
{ after(grammarAccess.getTK_ARTIFACTRule()); } 
	 EOF 
;

// Rule TK_ARTIFACT
ruleTK_ARTIFACT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_ARTIFACTAccess().getArtifactKeyword()); }

	'artifact' 

{ after(grammarAccess.getTK_ARTIFACTAccess().getArtifactKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_MAX
entryRuleTK_MAX 
:
{ before(grammarAccess.getTK_MAXRule()); }
	 ruleTK_MAX
{ after(grammarAccess.getTK_MAXRule()); } 
	 EOF 
;

// Rule TK_MAX
ruleTK_MAX
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_MAXAccess().getMaxKeyword()); }

	'max' 

{ after(grammarAccess.getTK_MAXAccess().getMaxKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_MIN
entryRuleTK_MIN 
:
{ before(grammarAccess.getTK_MINRule()); }
	 ruleTK_MIN
{ after(grammarAccess.getTK_MINRule()); } 
	 EOF 
;

// Rule TK_MIN
ruleTK_MIN
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_MINAccess().getMinKeyword()); }

	'min' 

{ after(grammarAccess.getTK_MINAccess().getMinKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_STATES
entryRuleTK_STATES 
:
{ before(grammarAccess.getTK_STATESRule()); }
	 ruleTK_STATES
{ after(grammarAccess.getTK_STATESRule()); } 
	 EOF 
;

// Rule TK_STATES
ruleTK_STATES
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_STATESAccess().getStatesKeyword()); }

	'states' 

{ after(grammarAccess.getTK_STATESAccess().getStatesKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_INITIAL
entryRuleTK_INITIAL 
:
{ before(grammarAccess.getTK_INITIALRule()); }
	 ruleTK_INITIAL
{ after(grammarAccess.getTK_INITIALRule()); } 
	 EOF 
;

// Rule TK_INITIAL
ruleTK_INITIAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_INITIALAccess().getInitialKeyword()); }

	'initial' 

{ after(grammarAccess.getTK_INITIALAccess().getInitialKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_FINAL
entryRuleTK_FINAL 
:
{ before(grammarAccess.getTK_FINALRule()); }
	 ruleTK_FINAL
{ after(grammarAccess.getTK_FINALRule()); } 
	 EOF 
;

// Rule TK_FINAL
ruleTK_FINAL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_FINALAccess().getFinalKeyword()); }

	'final' 

{ after(grammarAccess.getTK_FINALAccess().getFinalKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_TRANSITIONS
entryRuleTK_TRANSITIONS 
:
{ before(grammarAccess.getTK_TRANSITIONSRule()); }
	 ruleTK_TRANSITIONS
{ after(grammarAccess.getTK_TRANSITIONSRule()); } 
	 EOF 
;

// Rule TK_TRANSITIONS
ruleTK_TRANSITIONS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_TRANSITIONSAccess().getTransitionsKeyword()); }

	'transitions' 

{ after(grammarAccess.getTK_TRANSITIONSAccess().getTransitionsKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_TIMEOUT
entryRuleTK_TIMEOUT 
:
{ before(grammarAccess.getTK_TIMEOUTRule()); }
	 ruleTK_TIMEOUT
{ after(grammarAccess.getTK_TIMEOUTRule()); } 
	 EOF 
;

// Rule TK_TIMEOUT
ruleTK_TIMEOUT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_TIMEOUTAccess().getTimeoutKeyword()); }

	'timeout' 

{ after(grammarAccess.getTK_TIMEOUTAccess().getTimeoutKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_MESSAGE
entryRuleTK_MESSAGE 
:
{ before(grammarAccess.getTK_MESSAGERule()); }
	 ruleTK_MESSAGE
{ after(grammarAccess.getTK_MESSAGERule()); } 
	 EOF 
;

// Rule TK_MESSAGE
ruleTK_MESSAGE
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_MESSAGEAccess().getMessageKeyword()); }

	'message' 

{ after(grammarAccess.getTK_MESSAGEAccess().getMessageKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_ACTION
entryRuleTK_ACTION 
:
{ before(grammarAccess.getTK_ACTIONRule()); }
	 ruleTK_ACTION
{ after(grammarAccess.getTK_ACTIONRule()); } 
	 EOF 
;

// Rule TK_ACTION
ruleTK_ACTION
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_ACTIONAccess().getActionKeyword()); }

	'action' 

{ after(grammarAccess.getTK_ACTIONAccess().getActionKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_EVENT
entryRuleTK_EVENT 
:
{ before(grammarAccess.getTK_EVENTRule()); }
	 ruleTK_EVENT
{ after(grammarAccess.getTK_EVENTRule()); } 
	 EOF 
;

// Rule TK_EVENT
ruleTK_EVENT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_EVENTAccess().getEventKeyword()); }

	'event' 

{ after(grammarAccess.getTK_EVENTAccess().getEventKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_TRIGGER
entryRuleTK_TRIGGER 
:
{ before(grammarAccess.getTK_TRIGGERRule()); }
	 ruleTK_TRIGGER
{ after(grammarAccess.getTK_TRIGGERRule()); } 
	 EOF 
;

// Rule TK_TRIGGER
ruleTK_TRIGGER
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_TRIGGERAccess().getTriggerKeyword()); }

	'trigger' 

{ after(grammarAccess.getTK_TRIGGERAccess().getTriggerKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_IMPORT
entryRuleTK_IMPORT 
:
{ before(grammarAccess.getTK_IMPORTRule()); }
	 ruleTK_IMPORT
{ after(grammarAccess.getTK_IMPORTRule()); } 
	 EOF 
;

// Rule TK_IMPORT
ruleTK_IMPORT
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_IMPORTAccess().getImportKeyword()); }

	'import' 

{ after(grammarAccess.getTK_IMPORTAccess().getImportKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_MAPPING
entryRuleTK_MAPPING 
:
{ before(grammarAccess.getTK_MAPPINGRule()); }
	 ruleTK_MAPPING
{ after(grammarAccess.getTK_MAPPINGRule()); } 
	 EOF 
;

// Rule TK_MAPPING
ruleTK_MAPPING
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_MAPPINGAccess().getMappingKeyword()); }

	'mapping' 

{ after(grammarAccess.getTK_MAPPINGAccess().getMappingKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_ALL
entryRuleTK_ALL 
:
{ before(grammarAccess.getTK_ALLRule()); }
	 ruleTK_ALL
{ after(grammarAccess.getTK_ALLRule()); } 
	 EOF 
;

// Rule TK_ALL
ruleTK_ALL
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_ALLAccess().getAllKeyword()); }

	'all' 

{ after(grammarAccess.getTK_ALLAccess().getAllKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleTK_PLUS
entryRuleTK_PLUS 
:
{ before(grammarAccess.getTK_PLUSRule()); }
	 ruleTK_PLUS
{ after(grammarAccess.getTK_PLUSRule()); } 
	 EOF 
;

// Rule TK_PLUS
ruleTK_PLUS
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getTK_PLUSAccess().getPlusSignKeyword()); }

	'+' 

{ after(grammarAccess.getTK_PLUSAccess().getPlusSignKeyword()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleID
entryRuleID 
:
{ before(grammarAccess.getIDRule()); }
	 ruleID
{ after(grammarAccess.getIDRule()); } 
	 EOF 
;

// Rule ID
ruleID
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getIDAccess().getID_WITH_STARTING_LCLETTERTerminalRuleCall()); }
	RULE_ID_WITH_STARTING_LCLETTER
{ after(grammarAccess.getIDAccess().getID_WITH_STARTING_LCLETTERTerminalRuleCall()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__TransitionType__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getTypeAssignment_0()); }
(rule__TransitionType__TypeAssignment_0)
{ after(grammarAccess.getTransitionTypeAccess().getTypeAssignment_0()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getTypeAssignment_1()); }
(rule__TransitionType__TypeAssignment_1)
{ after(grammarAccess.getTransitionTypeAccess().getTypeAssignment_1()); }
)

    |(
{ before(grammarAccess.getTransitionTypeAccess().getTypeAssignment_2()); }
(rule__TransitionType__TypeAssignment_2)
{ after(grammarAccess.getTransitionTypeAccess().getTypeAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getGroup_1_0()); }
(rule__Trigger__Group_1_0__0)
{ after(grammarAccess.getTriggerAccess().getGroup_1_0()); }
)

    |(
{ before(grammarAccess.getTriggerAccess().getContentAssignment_1_1()); }
(rule__Trigger__ContentAssignment_1_1)
{ after(grammarAccess.getTriggerAccess().getContentAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Alternatives_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getOccurrenceAccess().getTriggerAssignment_5_0()); }
(rule__Occurrence__TriggerAssignment_5_0)
{ after(grammarAccess.getOccurrenceAccess().getTriggerAssignment_5_0()); }
)
(
{ before(grammarAccess.getOccurrenceAccess().getTriggerAssignment_5_0()); }
(rule__Occurrence__TriggerAssignment_5_0)*
{ after(grammarAccess.getOccurrenceAccess().getTriggerAssignment_5_0()); }
)
)

    |(
{ before(grammarAccess.getOccurrenceAccess().getSemicolonKeyword_5_1()); }

	';' 

{ after(grammarAccess.getOccurrenceAccess().getSemicolonKeyword_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getNameAssignment_1_0()); }
(rule__DutyType__NameAssignment_1_0)
{ after(grammarAccess.getDutyTypeAccess().getNameAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getDutyTypeAccess().getNameAssignment_1_1()); }
(rule__DutyType__NameAssignment_1_1)
{ after(grammarAccess.getDutyTypeAccess().getNameAssignment_1_1()); }
)

    |(
{ before(grammarAccess.getDutyTypeAccess().getGroup_1_2()); }
(rule__DutyType__Group_1_2__0)
{ after(grammarAccess.getDutyTypeAccess().getGroup_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getInitialAssignment_1_0()); }
(rule__StateType__InitialAssignment_1_0)
{ after(grammarAccess.getStateTypeAccess().getInitialAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getStateTypeAccess().getFinalAssignment_1_1()); }
(rule__StateType__FinalAssignment_1_1)
{ after(grammarAccess.getStateTypeAccess().getFinalAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Alternatives_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getGroup_0_0()); }
(rule__ParticipantDescription__Group_0_0__0)
{ after(grammarAccess.getParticipantDescriptionAccess().getGroup_0_0()); }
)

    |(
{ before(grammarAccess.getParticipantDescriptionAccess().getGroup_0_1()); }
(rule__ParticipantDescription__Group_0_1__0)
{ after(grammarAccess.getParticipantDescriptionAccess().getGroup_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinality__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getGroup_0()); }
(rule__ParticipantCardinality__Group_0__0)
{ after(grammarAccess.getParticipantCardinalityAccess().getGroup_0()); }
)

    |(
{ before(grammarAccess.getParticipantCardinalityAccess().getCardMinMaxAssignment_1()); }
(rule__ParticipantCardinality__CardMinMaxAssignment_1)
{ after(grammarAccess.getParticipantCardinalityAccess().getCardMinMaxAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__Alternatives_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getMaxAssignment_1_0()); }
(rule__ParticipantCardinalityMax__MaxAssignment_1_0)
{ after(grammarAccess.getParticipantCardinalityMaxAccess().getMaxAssignment_1_0()); }
)

    |(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getMax2Assignment_1_1()); }
(rule__ParticipantCardinalityMax__Max2Assignment_1_1)
{ after(grammarAccess.getParticipantCardinalityMaxAccess().getMax2Assignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}



rule__Protocol__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__0__Impl
	rule__Protocol__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getTK_PROTOCOLParserRuleCall_0()); }
	ruleTK_PROTOCOL
{ after(grammarAccess.getProtocolAccess().getTK_PROTOCOLParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__1__Impl
	rule__Protocol__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getNameAssignment_1()); }
(rule__Protocol__NameAssignment_1)
{ after(grammarAccess.getProtocolAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__2__Impl
	rule__Protocol__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_2()); }

	'{' 

{ after(grammarAccess.getProtocolAccess().getLeftCurlyBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__3__Impl
	rule__Protocol__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getDescriptionAssignment_3()); }
(rule__Protocol__DescriptionAssignment_3)
{ after(grammarAccess.getProtocolAccess().getDescriptionAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__4__Impl
	rule__Protocol__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getGoalsAssignment_4()); }
(rule__Protocol__GoalsAssignment_4)
{ after(grammarAccess.getProtocolAccess().getGoalsAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__5__Impl
	rule__Protocol__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getParticipantsAssignment_5()); }
(rule__Protocol__ParticipantsAssignment_5)
{ after(grammarAccess.getProtocolAccess().getParticipantsAssignment_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__6__Impl
	rule__Protocol__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getStatesAssignment_6()); }
(rule__Protocol__StatesAssignment_6)
{ after(grammarAccess.getProtocolAccess().getStatesAssignment_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__7__Impl
	rule__Protocol__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getTransitionsAssignment_7()); }
(rule__Protocol__TransitionsAssignment_7)
{ after(grammarAccess.getProtocolAccess().getTransitionsAssignment_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Protocol__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Protocol__Group__8__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_8()); }

	'}' 

{ after(grammarAccess.getProtocolAccess().getRightCurlyBracketKeyword_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}




















rule__Transitions__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__0__Impl
	rule__Transitions__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getNameAssignment_0()); }
(rule__Transitions__NameAssignment_0)
{ after(grammarAccess.getTransitionsAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__1__Impl
	rule__Transitions__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getTransitionsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transitions__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transitions__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getTransitionsAccess().getTransitionsAssignment_2()); }
(rule__Transitions__TransitionsAssignment_2)
{ after(grammarAccess.getTransitionsAccess().getTransitionsAssignment_2()); }
)
(
{ before(grammarAccess.getTransitionsAccess().getTransitionsAssignment_2()); }
(rule__Transitions__TransitionsAssignment_2)*
{ after(grammarAccess.getTransitionsAccess().getTransitionsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Transition__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__0__Impl
	rule__Transition__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateAssignment_0()); }
(rule__Transition__SourceStateAssignment_0)
{ after(grammarAccess.getTransitionAccess().getSourceStateAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__1__Impl
	rule__Transition__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getHyphenMinusKeyword_1()); }

	'-' 

{ after(grammarAccess.getTransitionAccess().getHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__2__Impl
	rule__Transition__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDestinationStateAssignment_2()); }
(rule__Transition__DestinationStateAssignment_2)
{ after(grammarAccess.getTransitionAccess().getDestinationStateAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__3__Impl
	rule__Transition__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getNumberSignKeyword_3()); }

	'#' 

{ after(grammarAccess.getTransitionAccess().getNumberSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Transition__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Transition__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeAssignment_4()); }
(rule__Transition__TypeAssignment_4)
{ after(grammarAccess.getTransitionAccess().getTypeAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}












rule__Timeout__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timeout__Group__0__Impl
	rule__Timeout__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeoutAccess().getNameAssignment_0()); }
(rule__Timeout__NameAssignment_0)
{ after(grammarAccess.getTimeoutAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timeout__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timeout__Group__1__Impl
	rule__Timeout__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeoutAccess().getTimeoutAssignment_1()); }
(rule__Timeout__TimeoutAssignment_1)
{ after(grammarAccess.getTimeoutAccess().getTimeoutAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Timeout__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Timeout__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeoutAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getTimeoutAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameAssignment_0()); }
(rule__Import__NameAssignment_0)
{ after(grammarAccess.getImportAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
	rule__Import__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getFileAssignment_1()); }
(rule__Import__FileAssignment_1)
{ after(grammarAccess.getImportAccess().getFileAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__2__Impl
	rule__Import__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMappingAssignment_2()); }
(rule__Import__MappingAssignment_2)?
{ after(grammarAccess.getImportAccess().getMappingAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }

	';' 

{ after(grammarAccess.getImportAccess().getSemicolonKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Mapping__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__0__Impl
	rule__Mapping__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getNameAssignment_0()); }
(rule__Mapping__NameAssignment_0)
{ after(grammarAccess.getMappingAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__1__Impl
	rule__Mapping__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_1()); }

	'{' 

{ after(grammarAccess.getMappingAccess().getLeftCurlyBracketKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__2__Impl
	rule__Mapping__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getMappingAccess().getMapsAssignment_2()); }
(rule__Mapping__MapsAssignment_2)
{ after(grammarAccess.getMappingAccess().getMapsAssignment_2()); }
)
(
{ before(grammarAccess.getMappingAccess().getMapsAssignment_2()); }
(rule__Mapping__MapsAssignment_2)*
{ after(grammarAccess.getMappingAccess().getMapsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Mapping__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Mapping__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_3()); }

	'}' 

{ after(grammarAccess.getMappingAccess().getRightCurlyBracketKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__MapFromTo__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapFromTo__Group__0__Impl
	rule__MapFromTo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__MapFromTo__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFromToAccess().getFromAssignment_0()); }
(rule__MapFromTo__FromAssignment_0)
{ after(grammarAccess.getMapFromToAccess().getFromAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapFromTo__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapFromTo__Group__1__Impl
	rule__MapFromTo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__MapFromTo__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFromToAccess().getToAssignment_1()); }
(rule__MapFromTo__ToAssignment_1)
{ after(grammarAccess.getMapFromToAccess().getToAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__MapFromTo__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__MapFromTo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__MapFromTo__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFromToAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getMapFromToAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Trigger__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__0__Impl
	rule__Trigger__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getTriggerAction_0()); }
(

)
{ after(grammarAccess.getTriggerAccess().getTriggerAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__1__Impl
	rule__Trigger__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getAlternatives_1()); }
(rule__Trigger__Alternatives_1)
{ after(grammarAccess.getTriggerAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getTriggerAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Trigger__Group_1_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_1_0__0__Impl
	rule__Trigger__Group_1_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getPatternAssignment_1_0_0()); }
(rule__Trigger__PatternAssignment_1_0_0)
{ after(grammarAccess.getTriggerAccess().getPatternAssignment_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Trigger__Group_1_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Trigger__Group_1_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__Group_1_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getContentAssignment_1_0_1()); }
(rule__Trigger__ContentAssignment_1_0_1)?
{ after(grammarAccess.getTriggerAccess().getContentAssignment_1_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Pattern__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__0__Impl
	rule__Pattern__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getNameAssignment_0()); }
(rule__Pattern__NameAssignment_0)
{ after(grammarAccess.getPatternAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Pattern__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Pattern__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getPatternAssignment_1()); }
(rule__Pattern__PatternAssignment_1)
{ after(grammarAccess.getPatternAccess().getPatternAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Content__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__0__Impl
	rule__Content__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getColonKeyword_0()); }

	':' 

{ after(grammarAccess.getContentAccess().getColonKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Content__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Content__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Content__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getContentAssignment_1()); }
(rule__Content__ContentAssignment_1)
{ after(grammarAccess.getContentAccess().getContentAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Occurrence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__0__Impl
	rule__Occurrence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getParticipantSourceAssignment_0()); }
(rule__Occurrence__ParticipantSourceAssignment_0)
{ after(grammarAccess.getOccurrenceAccess().getParticipantSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Occurrence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__1__Impl
	rule__Occurrence__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getHyphenMinusHyphenMinusKeyword_1()); }

	'--' 

{ after(grammarAccess.getOccurrenceAccess().getHyphenMinusHyphenMinusKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Occurrence__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__2__Impl
	rule__Occurrence__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getDutyAssignment_2()); }
(rule__Occurrence__DutyAssignment_2)
{ after(grammarAccess.getOccurrenceAccess().getDutyAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Occurrence__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__3__Impl
	rule__Occurrence__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getHyphenMinusGreaterThanSignKeyword_3()); }

	'->' 

{ after(grammarAccess.getOccurrenceAccess().getHyphenMinusGreaterThanSignKeyword_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Occurrence__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__4__Impl
	rule__Occurrence__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getParticipantDestinationAssignment_4()); }
(rule__Occurrence__ParticipantDestinationAssignment_4)
{ after(grammarAccess.getOccurrenceAccess().getParticipantDestinationAssignment_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Occurrence__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Occurrence__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getAlternatives_5()); }
(rule__Occurrence__Alternatives_5)
{ after(grammarAccess.getOccurrenceAccess().getAlternatives_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}














rule__Duty__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Duty__Group__0__Impl
	rule__Duty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Duty__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyAccess().getDutytypeAssignment_0()); }
(rule__Duty__DutytypeAssignment_0)
{ after(grammarAccess.getDutyAccess().getDutytypeAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Duty__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Duty__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Duty__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyAccess().getDutyAssignment_1()); }
(rule__Duty__DutyAssignment_1)
{ after(grammarAccess.getDutyAccess().getDutyAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DutyType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group__0__Impl
	rule__DutyType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getDutyTypeAction_0()); }
(

)
{ after(grammarAccess.getDutyTypeAccess().getDutyTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DutyType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getAlternatives_1()); }
(rule__DutyType__Alternatives_1)
{ after(grammarAccess.getDutyTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__DutyType__Group_1_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group_1_2__0__Impl
	rule__DutyType__Group_1_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group_1_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getNameAssignment_1_2_0()); }
(rule__DutyType__NameAssignment_1_2_0)
{ after(grammarAccess.getDutyTypeAccess().getNameAssignment_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DutyType__Group_1_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group_1_2__1__Impl
	rule__DutyType__Group_1_2__2
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group_1_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getLeftSquareBracketKeyword_1_2_1()); }

	'[' 

{ after(grammarAccess.getDutyTypeAccess().getLeftSquareBracketKeyword_1_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DutyType__Group_1_2__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group_1_2__2__Impl
	rule__DutyType__Group_1_2__3
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group_1_2__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getPerformativeAssignment_1_2_2()); }
(rule__DutyType__PerformativeAssignment_1_2_2)
{ after(grammarAccess.getDutyTypeAccess().getPerformativeAssignment_1_2_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__DutyType__Group_1_2__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__DutyType__Group_1_2__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__Group_1_2__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getRightSquareBracketKeyword_1_2_3()); }

	']' 

{ after(grammarAccess.getDutyTypeAccess().getRightSquareBracketKeyword_1_2_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__ParticipantOccurrence__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantOccurrence__Group__0__Impl
	rule__ParticipantOccurrence__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getParticipantSourceAssignment_0()); }
(rule__ParticipantOccurrence__ParticipantSourceAssignment_0)
{ after(grammarAccess.getParticipantOccurrenceAccess().getParticipantSourceAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantOccurrence__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantOccurrence__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getGroup_1()); }
(rule__ParticipantOccurrence__Group_1__0)?
{ after(grammarAccess.getParticipantOccurrenceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantOccurrence__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantOccurrence__Group_1__0__Impl
	rule__ParticipantOccurrence__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getLeftSquareBracketKeyword_1_0()); }

	'[' 

{ after(grammarAccess.getParticipantOccurrenceAccess().getLeftSquareBracketKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantOccurrence__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantOccurrence__Group_1__1__Impl
	rule__ParticipantOccurrence__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getCardinalityAssignment_1_1()); }
(rule__ParticipantOccurrence__CardinalityAssignment_1_1)
{ after(grammarAccess.getParticipantOccurrenceAccess().getCardinalityAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantOccurrence__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantOccurrence__Group_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getRightSquareBracketKeyword_1_2()); }

	']' 

{ after(grammarAccess.getParticipantOccurrenceAccess().getRightSquareBracketKeyword_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__States__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__0__Impl
	rule__States__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getNameAssignment_0()); }
(rule__States__NameAssignment_0)
{ after(grammarAccess.getStatesAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__1__Impl
	rule__States__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getStatesAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__States__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__States__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__States__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getStatesAccess().getStatesAssignment_2()); }
(rule__States__StatesAssignment_2)
{ after(grammarAccess.getStatesAccess().getStatesAssignment_2()); }
)
(
{ before(grammarAccess.getStatesAccess().getStatesAssignment_2()); }
(rule__States__StatesAssignment_2)*
{ after(grammarAccess.getStatesAccess().getStatesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__State__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__0__Impl
	rule__State__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdAssignment_0()); }
(rule__State__IdAssignment_0)
{ after(grammarAccess.getStateAccess().getIdAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__1__Impl
	rule__State__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeAssignment_1()); }
(rule__State__TypeAssignment_1)
{ after(grammarAccess.getStateAccess().getTypeAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__State__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__State__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__State__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getStateAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__StateType__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateType__Group__0__Impl
	rule__StateType__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getStateTypeAction_0()); }
(

)
{ after(grammarAccess.getStateTypeAccess().getStateTypeAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__StateType__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__StateType__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getAlternatives_1()); }
(rule__StateType__Alternatives_1)?
{ after(grammarAccess.getStateTypeAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Participants__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participants__Group__0__Impl
	rule__Participants__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Participants__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantsAccess().getNameAssignment_0()); }
(rule__Participants__NameAssignment_0)
{ after(grammarAccess.getParticipantsAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participants__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participants__Group__1__Impl
	rule__Participants__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Participants__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getParticipantsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participants__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participants__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Participants__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getParticipantsAccess().getParticipantsAssignment_2()); }
(rule__Participants__ParticipantsAssignment_2)
{ after(grammarAccess.getParticipantsAccess().getParticipantsAssignment_2()); }
)
(
{ before(grammarAccess.getParticipantsAccess().getParticipantsAssignment_2()); }
(rule__Participants__ParticipantsAssignment_2)*
{ after(grammarAccess.getParticipantsAccess().getParticipantsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Participant__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group__0__Impl
	rule__Participant__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getNameAssignment_0()); }
(rule__Participant__NameAssignment_0)
{ after(grammarAccess.getParticipantAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participant__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group__1__Impl
	rule__Participant__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getParticipantDescriptionAssignment_1()); }
(rule__Participant__ParticipantDescriptionAssignment_1)
{ after(grammarAccess.getParticipantAccess().getParticipantDescriptionAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Participant__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Participant__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getSemicolonKeyword_2()); }

	';' 

{ after(grammarAccess.getParticipantAccess().getSemicolonKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParticipantDescription__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group__0__Impl
	rule__ParticipantDescription__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getAlternatives_0()); }
(rule__ParticipantDescription__Alternatives_0)
{ after(grammarAccess.getParticipantDescriptionAccess().getAlternatives_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantDescription__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getCardAssignment_1()); }
(rule__ParticipantDescription__CardAssignment_1)
{ after(grammarAccess.getParticipantDescriptionAccess().getCardAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantDescription__Group_0_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group_0_0__0__Impl
	rule__ParticipantDescription__Group_0_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group_0_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getKindAssignment_0_0_0()); }
(rule__ParticipantDescription__KindAssignment_0_0_0)
{ after(grammarAccess.getParticipantDescriptionAccess().getKindAssignment_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantDescription__Group_0_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group_0_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group_0_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getRoleAssignment_0_0_1()); }
(rule__ParticipantDescription__RoleAssignment_0_0_1)
{ after(grammarAccess.getParticipantDescriptionAccess().getRoleAssignment_0_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantDescription__Group_0_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group_0_1__0__Impl
	rule__ParticipantDescription__Group_0_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group_0_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getKindAssignment_0_1_0()); }
(rule__ParticipantDescription__KindAssignment_0_1_0)
{ after(grammarAccess.getParticipantDescriptionAccess().getKindAssignment_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantDescription__Group_0_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantDescription__Group_0_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__Group_0_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getTypeAssignment_0_1_1()); }
(rule__ParticipantDescription__TypeAssignment_0_1_1)
{ after(grammarAccess.getParticipantDescriptionAccess().getTypeAssignment_0_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantCardinality__Group_0__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinality__Group_0__0__Impl
	rule__ParticipantCardinality__Group_0__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinality__Group_0__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getParticipantCardinalityAction_0_0()); }
(

)
{ after(grammarAccess.getParticipantCardinalityAccess().getParticipantCardinalityAction_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCardinality__Group_0__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinality__Group_0__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinality__Group_0__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getCardAllAssignment_0_1()); }
(rule__ParticipantCardinality__CardAllAssignment_0_1)
{ after(grammarAccess.getParticipantCardinalityAccess().getCardAllAssignment_0_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantCardinalityMinMax__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMinMax__Group__0__Impl
	rule__ParticipantCardinalityMinMax__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMinMax__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getParticipantCardinalityMinMaxAction_0()); }
(

)
{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getParticipantCardinalityMinMaxAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCardinalityMinMax__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMinMax__Group__1__Impl
	rule__ParticipantCardinalityMinMax__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMinMax__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getMinAssignment_1()); }
(rule__ParticipantCardinalityMinMax__MinAssignment_1)?
{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getMinAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCardinalityMinMax__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMinMax__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMinMax__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getMaxAssignment_2()); }
(rule__ParticipantCardinalityMinMax__MaxAssignment_2)?
{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getMaxAssignment_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__ParticipantCardinalityMin__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMin__Group__0__Impl
	rule__ParticipantCardinalityMin__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMin__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinAccess().getNameAssignment_0()); }
(rule__ParticipantCardinalityMin__NameAssignment_0)
{ after(grammarAccess.getParticipantCardinalityMinAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCardinalityMin__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMin__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMin__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinAccess().getMinAssignment_1()); }
(rule__ParticipantCardinalityMin__MinAssignment_1)
{ after(grammarAccess.getParticipantCardinalityMinAccess().getMinAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__ParticipantCardinalityMax__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMax__Group__0__Impl
	rule__ParticipantCardinalityMax__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getNameAssignment_0()); }
(rule__ParticipantCardinalityMax__NameAssignment_0)
{ after(grammarAccess.getParticipantCardinalityMaxAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__ParticipantCardinalityMax__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__ParticipantCardinalityMax__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getAlternatives_1()); }
(rule__ParticipantCardinalityMax__Alternatives_1)
{ after(grammarAccess.getParticipantCardinalityMaxAccess().getAlternatives_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Description__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group__0__Impl
	rule__Description__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAction_0()); }
(

)
{ after(grammarAccess.getDescriptionAccess().getDescriptionAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getGroup_1()); }
(rule__Description__Group_1__0)?
{ after(grammarAccess.getDescriptionAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Description__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group_1__0__Impl
	rule__Description__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getNameAssignment_1_0()); }
(rule__Description__NameAssignment_1_0)
{ after(grammarAccess.getDescriptionAccess().getNameAssignment_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group_1__1__Impl
	rule__Description__Group_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getColonKeyword_1_1()); }

	':' 

{ after(grammarAccess.getDescriptionAccess().getColonKeyword_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group_1__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group_1__2__Impl
	rule__Description__Group_1__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group_1__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionAssignment_1_2()); }
(rule__Description__DescriptionAssignment_1_2)
{ after(grammarAccess.getDescriptionAccess().getDescriptionAssignment_1_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Description__Group_1__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Description__Group_1__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Description__Group_1__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getSemicolonKeyword_1_3()); }

	';' 

{ after(grammarAccess.getDescriptionAccess().getSemicolonKeyword_1_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Goals__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goals__Group__0__Impl
	rule__Goals__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goals__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalsAccess().getNameAssignment_0()); }
(rule__Goals__NameAssignment_0)
{ after(grammarAccess.getGoalsAccess().getNameAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goals__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goals__Group__1__Impl
	rule__Goals__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Goals__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalsAccess().getColonKeyword_1()); }

	':' 

{ after(grammarAccess.getGoalsAccess().getColonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goals__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goals__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goals__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getGoalsAccess().getGoalsAssignment_2()); }
(rule__Goals__GoalsAssignment_2)
{ after(grammarAccess.getGoalsAccess().getGoalsAssignment_2()); }
)
(
{ before(grammarAccess.getGoalsAccess().getGoalsAssignment_2()); }
(rule__Goals__GoalsAssignment_2)*
{ after(grammarAccess.getGoalsAccess().getGoalsAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Goal__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__0__Impl
	rule__Goal__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGoalAssignment_0()); }
(rule__Goal__GoalAssignment_0)
{ after(grammarAccess.getGoalAccess().getGoalAssignment_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Goal__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Goal__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getSemicolonKeyword_1()); }

	';' 

{ after(grammarAccess.getGoalAccess().getSemicolonKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Protocol__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getNameIDParserRuleCall_1_0()); }
	ruleID{ after(grammarAccess.getProtocolAccess().getNameIDParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__DescriptionAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
	ruleDescription{ after(grammarAccess.getProtocolAccess().getDescriptionDescriptionParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__GoalsAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getGoalsGoalsParserRuleCall_4_0()); }
	ruleGoals{ after(grammarAccess.getProtocolAccess().getGoalsGoalsParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__ParticipantsAssignment_5
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getParticipantsParticipantsParserRuleCall_5_0()); }
	ruleParticipants{ after(grammarAccess.getProtocolAccess().getParticipantsParticipantsParserRuleCall_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__StatesAssignment_6
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getStatesStatesParserRuleCall_6_0()); }
	ruleStates{ after(grammarAccess.getProtocolAccess().getStatesStatesParserRuleCall_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Protocol__TransitionsAssignment_7
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getProtocolAccess().getTransitionsTransitionsParserRuleCall_7_0()); }
	ruleTransitions{ after(grammarAccess.getProtocolAccess().getTransitionsTransitionsParserRuleCall_7_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getNameTK_TRANSITIONSParserRuleCall_0_0()); }
	ruleTK_TRANSITIONS{ after(grammarAccess.getTransitionsAccess().getNameTK_TRANSITIONSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transitions__TransitionsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionsAccess().getTransitionsTransitionParserRuleCall_2_0()); }
	ruleTransition{ after(grammarAccess.getTransitionsAccess().getTransitionsTransitionParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__SourceStateAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getSourceStateStateIdParserRuleCall_0_0()); }
	ruleStateId{ after(grammarAccess.getTransitionAccess().getSourceStateStateIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__DestinationStateAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getDestinationStateStateIdParserRuleCall_2_0()); }
	ruleStateId{ after(grammarAccess.getTransitionAccess().getDestinationStateStateIdParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Transition__TypeAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionAccess().getTypeTransitionTypeParserRuleCall_4_0()); }
	ruleTransitionType{ after(grammarAccess.getTransitionAccess().getTypeTransitionTypeParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionType__TypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getTypeOccurrenceParserRuleCall_0_0()); }
	ruleOccurrence{ after(grammarAccess.getTransitionTypeAccess().getTypeOccurrenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionType__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getTypeTimeoutParserRuleCall_1_0()); }
	ruleTimeout{ after(grammarAccess.getTransitionTypeAccess().getTypeTimeoutParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__TransitionType__TypeAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTransitionTypeAccess().getTypeImportParserRuleCall_2_0()); }
	ruleImport{ after(grammarAccess.getTransitionTypeAccess().getTypeImportParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeoutAccess().getNameTK_TIMEOUTParserRuleCall_0_0()); }
	ruleTK_TIMEOUT{ after(grammarAccess.getTimeoutAccess().getNameTK_TIMEOUTParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Timeout__TimeoutAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTimeoutAccess().getTimeoutINTEGERTerminalRuleCall_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getTimeoutAccess().getTimeoutINTEGERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameTK_IMPORTParserRuleCall_0_0()); }
	ruleTK_IMPORT{ after(grammarAccess.getImportAccess().getNameTK_IMPORTParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__FileAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getFileSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getImportAccess().getFileSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__MappingAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getMappingMappingParserRuleCall_2_0()); }
	ruleMapping{ after(grammarAccess.getImportAccess().getMappingMappingParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getNameTK_MAPPINGParserRuleCall_0_0()); }
	ruleTK_MAPPING{ after(grammarAccess.getMappingAccess().getNameTK_MAPPINGParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Mapping__MapsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMappingAccess().getMapsMapFromToParserRuleCall_2_0()); }
	ruleMapFromTo{ after(grammarAccess.getMappingAccess().getMapsMapFromToParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapFromTo__FromAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFromToAccess().getFromParticipantIdParserRuleCall_0_0()); }
	ruleParticipantId{ after(grammarAccess.getMapFromToAccess().getFromParticipantIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__MapFromTo__ToAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getMapFromToAccess().getToParticipantIdParserRuleCall_1_0()); }
	ruleParticipantId{ after(grammarAccess.getMapFromToAccess().getToParticipantIdParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__PatternAssignment_1_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getPatternPatternParserRuleCall_1_0_0_0()); }
	rulePattern{ after(grammarAccess.getTriggerAccess().getPatternPatternParserRuleCall_1_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ContentAssignment_1_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getContentContentParserRuleCall_1_0_1_0()); }
	ruleContent{ after(grammarAccess.getTriggerAccess().getContentContentParserRuleCall_1_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Trigger__ContentAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTriggerAccess().getContentContentParserRuleCall_1_1_0()); }
	ruleContent{ after(grammarAccess.getTriggerAccess().getContentContentParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getNameTK_TRIGGERParserRuleCall_0_0()); }
	ruleTK_TRIGGER{ after(grammarAccess.getPatternAccess().getNameTK_TRIGGERParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Pattern__PatternAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getPatternAccess().getPatternSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getPatternAccess().getPatternSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Content__ContentAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContentAccess().getContentSTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getContentAccess().getContentSTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__ParticipantSourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getParticipantSourceParticipantOccurrenceParserRuleCall_0_0()); }
	ruleParticipantOccurrence{ after(grammarAccess.getOccurrenceAccess().getParticipantSourceParticipantOccurrenceParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__DutyAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getDutyDutyParserRuleCall_2_0()); }
	ruleDuty{ after(grammarAccess.getOccurrenceAccess().getDutyDutyParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__ParticipantDestinationAssignment_4
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getParticipantDestinationParticipantOccurrenceParserRuleCall_4_0()); }
	ruleParticipantOccurrence{ after(grammarAccess.getOccurrenceAccess().getParticipantDestinationParticipantOccurrenceParserRuleCall_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Occurrence__TriggerAssignment_5_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getOccurrenceAccess().getTriggerTriggerParserRuleCall_5_0_0()); }
	ruleTrigger{ after(grammarAccess.getOccurrenceAccess().getTriggerTriggerParserRuleCall_5_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Duty__DutytypeAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyAccess().getDutytypeDutyTypeParserRuleCall_0_0()); }
	ruleDutyType{ after(grammarAccess.getDutyAccess().getDutytypeDutyTypeParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Duty__DutyAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyAccess().getDutySTRINGTerminalRuleCall_1_0()); }
	RULE_STRING{ after(grammarAccess.getDutyAccess().getDutySTRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getNameTK_EVENTParserRuleCall_1_0_0()); }
	ruleTK_EVENT{ after(grammarAccess.getDutyTypeAccess().getNameTK_EVENTParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__NameAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getNameTK_ACTIONParserRuleCall_1_1_0()); }
	ruleTK_ACTION{ after(grammarAccess.getDutyTypeAccess().getNameTK_ACTIONParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__NameAssignment_1_2_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getNameTK_MESSAGEParserRuleCall_1_2_0_0()); }
	ruleTK_MESSAGE{ after(grammarAccess.getDutyTypeAccess().getNameTK_MESSAGEParserRuleCall_1_2_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__DutyType__PerformativeAssignment_1_2_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDutyTypeAccess().getPerformativeIDParserRuleCall_1_2_2_0()); }
	ruleID{ after(grammarAccess.getDutyTypeAccess().getPerformativeIDParserRuleCall_1_2_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__ParticipantSourceAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getParticipantSourceParticipantIdParserRuleCall_0_0()); }
	ruleParticipantId{ after(grammarAccess.getParticipantOccurrenceAccess().getParticipantSourceParticipantIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantOccurrence__CardinalityAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantOccurrenceAccess().getCardinalityINTEGERTerminalRuleCall_1_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getParticipantOccurrenceAccess().getCardinalityINTEGERTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__States__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getNameTK_STATESParserRuleCall_0_0()); }
	ruleTK_STATES{ after(grammarAccess.getStatesAccess().getNameTK_STATESParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__States__StatesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_2_0()); }
	ruleState{ after(grammarAccess.getStatesAccess().getStatesStateParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__IdAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getIdStateIdParserRuleCall_0_0()); }
	ruleStateId{ after(grammarAccess.getStateAccess().getIdStateIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__State__TypeAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateAccess().getTypeStateTypeParserRuleCall_1_0()); }
	ruleStateType{ after(grammarAccess.getStateAccess().getTypeStateTypeParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateId__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateIdAccess().getNameIDParserRuleCall_0()); }
	ruleID{ after(grammarAccess.getStateIdAccess().getNameIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__InitialAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getInitialTK_INITIALParserRuleCall_1_0_0()); }
	ruleTK_INITIAL{ after(grammarAccess.getStateTypeAccess().getInitialTK_INITIALParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StateType__FinalAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStateTypeAccess().getFinalTK_FINALParserRuleCall_1_1_0()); }
	ruleTK_FINAL{ after(grammarAccess.getStateTypeAccess().getFinalTK_FINALParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participants__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantsAccess().getNameTK_PARTICIPANTSParserRuleCall_0_0()); }
	ruleTK_PARTICIPANTS{ after(grammarAccess.getParticipantsAccess().getNameTK_PARTICIPANTSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participants__ParticipantsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantsAccess().getParticipantsParticipantParserRuleCall_2_0()); }
	ruleParticipant{ after(grammarAccess.getParticipantsAccess().getParticipantsParticipantParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getNameParticipantIdParserRuleCall_0_0()); }
	ruleParticipantId{ after(grammarAccess.getParticipantAccess().getNameParticipantIdParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Participant__ParticipantDescriptionAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantAccess().getParticipantDescriptionParticipantDescriptionParserRuleCall_1_0()); }
	ruleParticipantDescription{ after(grammarAccess.getParticipantAccess().getParticipantDescriptionParticipantDescriptionParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantId__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantIdAccess().getNameIDParserRuleCall_0()); }
	ruleID{ after(grammarAccess.getParticipantIdAccess().getNameIDParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__KindAssignment_0_0_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getKindTK_AGENTParserRuleCall_0_0_0_0()); }
	ruleTK_AGENT{ after(grammarAccess.getParticipantDescriptionAccess().getKindTK_AGENTParserRuleCall_0_0_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__RoleAssignment_0_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getRoleRoleParserRuleCall_0_0_1_0()); }
	ruleRole{ after(grammarAccess.getParticipantDescriptionAccess().getRoleRoleParserRuleCall_0_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__KindAssignment_0_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getKindTK_ARTIFACTParserRuleCall_0_1_0_0()); }
	ruleTK_ARTIFACT{ after(grammarAccess.getParticipantDescriptionAccess().getKindTK_ARTIFACTParserRuleCall_0_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__TypeAssignment_0_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getTypeTypeParserRuleCall_0_1_1_0()); }
	ruleType{ after(grammarAccess.getParticipantDescriptionAccess().getTypeTypeParserRuleCall_0_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantDescription__CardAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantDescriptionAccess().getCardParticipantCardinalityParserRuleCall_1_0()); }
	ruleParticipantCardinality{ after(grammarAccess.getParticipantDescriptionAccess().getCardParticipantCardinalityParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinality__CardAllAssignment_0_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getCardAllParticipantCardinalityAllParserRuleCall_0_1_0()); }
	ruleParticipantCardinalityAll{ after(grammarAccess.getParticipantCardinalityAccess().getCardAllParticipantCardinalityAllParserRuleCall_0_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinality__CardMinMaxAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAccess().getCardMinMaxParticipantCardinalityMinMaxParserRuleCall_1_0()); }
	ruleParticipantCardinalityMinMax{ after(grammarAccess.getParticipantCardinalityAccess().getCardMinMaxParticipantCardinalityMinMaxParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMinMax__MinAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getMinParticipantCardinalityMinParserRuleCall_1_0()); }
	ruleParticipantCardinalityMin{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getMinParticipantCardinalityMinParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMinMax__MaxAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinMaxAccess().getMaxParticipantCardinalityMaxParserRuleCall_2_0()); }
	ruleParticipantCardinalityMax{ after(grammarAccess.getParticipantCardinalityMinMaxAccess().getMaxParticipantCardinalityMaxParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMin__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinAccess().getNameTK_MINParserRuleCall_0_0()); }
	ruleTK_MIN{ after(grammarAccess.getParticipantCardinalityMinAccess().getNameTK_MINParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMin__MinAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMinAccess().getMinINTEGERTerminalRuleCall_1_0()); }
	RULE_INTEGER{ after(grammarAccess.getParticipantCardinalityMinAccess().getMinINTEGERTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getNameTK_MAXParserRuleCall_0_0()); }
	ruleTK_MAX{ after(grammarAccess.getParticipantCardinalityMaxAccess().getNameTK_MAXParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__MaxAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getMaxINTEGERTerminalRuleCall_1_0_0()); }
	RULE_INTEGER{ after(grammarAccess.getParticipantCardinalityMaxAccess().getMaxINTEGERTerminalRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityMax__Max2Assignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityMaxAccess().getMax2TK_PLUSParserRuleCall_1_1_0()); }
	ruleTK_PLUS{ after(grammarAccess.getParticipantCardinalityMaxAccess().getMax2TK_PLUSParserRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__ParticipantCardinalityAll__NameAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getParticipantCardinalityAllAccess().getNameTK_ALLParserRuleCall_0()); }
	ruleTK_ALL{ after(grammarAccess.getParticipantCardinalityAllAccess().getNameTK_ALLParserRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Type__TypeAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getTypeAccess().getTypeSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getTypeAccess().getTypeSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Role__RoleAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getRoleAccess().getRoleSTRINGTerminalRuleCall_0()); }
	RULE_STRING{ after(grammarAccess.getRoleAccess().getRoleSTRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Description__NameAssignment_1_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getNameTK_DESCRIPTIONParserRuleCall_1_0_0()); }
	ruleTK_DESCRIPTION{ after(grammarAccess.getDescriptionAccess().getNameTK_DESCRIPTIONParserRuleCall_1_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Description__DescriptionAssignment_1_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0()); }
	RULE_STRING{ after(grammarAccess.getDescriptionAccess().getDescriptionSTRINGTerminalRuleCall_1_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goals__NameAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalsAccess().getNameTK_GOALSParserRuleCall_0_0()); }
	ruleTK_GOALS{ after(grammarAccess.getGoalsAccess().getNameTK_GOALSParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goals__GoalsAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalsAccess().getGoalsGoalParserRuleCall_2_0()); }
	ruleGoal{ after(grammarAccess.getGoalsAccess().getGoalsGoalParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Goal__GoalAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getGoalAccess().getGoalSTRINGTerminalRuleCall_0_0()); }
	RULE_STRING{ after(grammarAccess.getGoalAccess().getGoalSTRINGTerminalRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_ID_WITH_STARTING_LCLETTER : '^'? ('a'..'z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_STRING : '"' ('\\' ('b'|'t'|'n'|'f'|'r'|'"'|'\''|'\\')|~(('\\'|'"')))* '"';

RULE_INTEGER : RULE_INTEGER_NUMBER;

fragment RULE_INTEGER_NUMBER : ('0'|'1'..'9' ('0'..'9')*);

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;


